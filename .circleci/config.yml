# Reusable definitions
generic: &GENERIC
  docker:
  - image: node:6
viewer: &VIEWER
  docker:
  - image: node:6
  working_directory: /app/ui
api: &API
  docker:
    - image: python:3.6.4
    - image: postgres:9.4
  working_directory: /app/api
  environment:
    DEBUG: "True"
    DATABASE_URL: postgres://postgres@localhost/postgres
    VCAP_SERVICES: |
      {"s3": [{
         "credentials": {
           "access_key_id": "LOCAL_ID",
           "bucket": "pdfs",
           "region": "irrelevant fake region",
           "endpoint": "http://localhost:9100",
           "secret_access_key": "LOCAL_KEY"
         },
         "label": "s3",
         "name": "storage-s3"
       }]
      }
admin-ui: &ADMIN_UI
  docker:
    - image: node:6
  working_directory: /app/api

# Main config
version: 2
jobs:
  get-code:
    <<: *GENERIC
    steps:
    - checkout:
        path: /app/
    - persist_to_workspace:
        root: /app/
        paths: ['*']
  prep-code-climate:
    <<: *GENERIC
    steps:
    - run:
        name: Fetch Code Climate Coverage reporter
        command: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > cc-test-reporter
    - run: chmod a+x cc-test-reporter
    - run: ./cc-test-reporter before-build
    - persist_to_workspace:
        root: ~/project
        paths: ['cc-test-reporter']

  viewer-deps:
    <<: *VIEWER
    steps:
    - attach_workspace:
        at: /app/
    - restore_cache:
        key: viewer-{{ checksum "package.json" }}-{{ checksum "npm-shrinkwrap.json" }}
    - run:
        name: Install Viewer Dependencies
        command: .docker/deps_ok_then echo 'Success'
    - save_cache:
        key: viewer-{{ checksum "package.json" }}-{{ checksum "npm-shrinkwrap.json" }}
        paths: ['node_modules']
    - persist_to_workspace:
        root: /app/
        paths: ['ui/node_modules']

  viewer-lint:
    <<: *VIEWER
    steps:
    - attach_workspace:
        at: /app/
    - run: npm run lint

  viewer-tests:
    <<: *VIEWER
    steps:
    - attach_workspace:
        at: /app/
    # CircleCI will tell Jest the wrong number of cores; run single-threaded
    # to prevent memory issues
    - run: npm run test -- --runInBand
    - run:
        name: Convert Coverage
        command: |
          ../cc-test-reporter format-coverage \
            --prefix /usr/src/app/ui --input-type lcov --output - lcov.info \
            | python ../devops/cc_add_prefix.py --prefix ui/ \
            > ../cc-coverage.node.json
    - persist_to_workspace:
        root: /app/
        paths: ['cc-coverage.node.json']

  viewer-build-demo: &VIEWER_BUILD
    <<: *VIEWER
    environment:
      DEBUG: "false"
      NODE_ENV: production
      API_URL: https://omb-eregs-api-demo.app.cloud.gov/
    steps:
    - attach_workspace:
        at: /app/
    - run:
        name: Build CSS
        command: npm run build-css
    - run:
        name: Build Next App
        command: INTERNAL_API_URL=${API_URL} npm run build
    - persist_to_workspace:
        root: /app/
        paths:
          - ui/static/styles.css
          - ui/static/font
          - ui/.next

  viewer-build-prod:
    <<: *VIEWER_BUILD
    environment:
      DEBUG: "false"
      NODE_ENV: production
      API_URL: https://policy-api.cio.gov/

  api-deps:
    <<: *API
    steps:
    - attach_workspace:
        at: /app/
    - restore_cache:
        key: api-{{ checksum "requirements_dev.txt" }}
    - run:
        name: Install API Dependencies
        command: .docker/activate_then echo 'Success'
    - save_cache:
        key: api-{{ checksum "requirements_dev.txt" }}
        paths: ['.venv-dev']
    - persist_to_workspace:
        root: /app/
        paths: ['api/.venv-dev']

  api-lint:
    <<: *API
    steps:
    - attach_workspace:
        at: /app/
    - run:
        name: Flake8
        command: .docker/activate_then flake8
    - run:
        name: MyPy
        command: .docker/activate_then mypy .
    - run:
        name: Bandit
        command: .docker/activate_then bandit -r ereqs_admin reqs omb_eregs -s B101

  api-tests:
    <<: *API
    steps:
    - attach_workspace:
        at: /app/
    - run:
        name: Py.Test
        command: .docker/activate_then py.test --cov --cov-report xml
    - run:
        name: Convert Coverage
        command: |
          ../cc-test-reporter format-coverage \
            --input-type coverage.py --output - \
            | python ../devops/cc_add_prefix.py --prefix api/ \
            > ../cc-coverage.python.json
    - persist_to_workspace:
        root: /app/
        paths: ['cc-coverage.python.json']

  api-build:
    <<: *API
    steps:
    - attach_workspace:
        at: /app/
    - run:
        name: Collect all of the static files
        command: .docker/activate_then python manage.py collectstatic --noinput
    - persist_to_workspace:
        root: /app/
        paths: ['api/collected-static']

  admin-ui-deps:
    <<: *ADMIN_UI
    steps:
    - attach_workspace:
        at: /app/
    - restore_cache:
        key: admin-ui-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
    - run:
        name: Install API Dependencies
        command: .docker/deps_ok_then echo 'Success'
    - save_cache:
        key: admin-ui-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
        paths: ['node_modules']
    - persist_to_workspace:
        root: /app/
        paths: ['api/node_modules']

  admin-ui-lint:
    <<: *ADMIN_UI
    steps:
    - attach_workspace:
        at: /app/
    - run: npm run lint

  admin-ui-tests:
    <<: *ADMIN_UI
    steps:
    - attach_workspace:
        at: /app/
    - run: npm test

  admin-ui-build:
    <<: *ADMIN_UI
    environment:
      DEBUG: "false"
      NODE_ENV: production
    steps:
    - attach_workspace:
        at: /app/
    - run:
        name: Build CSS
        command: npm run build
    - run:
        name: Build Editor
        command: npm run build
    - persist_to_workspace:
        root: /app/
        paths: ['api/webpack-static']

  submit_coverage:
    <<: *GENERIC
    working_directory: /app
    steps:
    - attach_workspace:
        at: /app/
    - run:
        name: Sum Coverage
        command: ./cc-test-reporter sum-coverage --output cc-coverage.json --parts 2 cc-coverage.*.json
    - run:
        name: Submit Coverage
        # Allow submission to fail; this occurs on re-builds
        command: ./cc-test-reporter upload-coverage --input cc-coverage.json || true

  deploy-demo:
    <<: *GENERIC
    working_directory: /app
    steps:
    - attach_workspace:
        at: /app/
    - run:
        name: Deploy to Demo
        command: CF_USERNAME=$CF_USERNAME_DEV CF_PASSWORD=$CF_PASSWORD_DEV ./devops/circle-deploy.sh dev

  deploy-prod:
    <<: *GENERIC
    working_directory: /app
    steps:
    - attach_workspace:
        at: /app/
    - run:
        name: Deploy to Production
        command: CF_USERNAME=$CF_USERNAME_PROD CF_PASSWORD=$CF_PASSWORD_PROD ./devops/circle-deploy.sh prod

workflows:
  version: 2

  all: &ALL_WORKFLOW
    jobs:
    - get-code
    - prep-code-climate

    - viewer-deps:
        requires: ['get-code']
    - api-deps:
        requires: ['get-code']
    - admin-ui-deps:
        requires: ['get-code']

    - viewer-lint:
        requires: ['viewer-deps']
    - viewer-tests:
        requires:
        - viewer-deps
        - prep-code-climate
    - api-lint:
        requires: ['api-deps']
    - api-tests:
        requires:
        - api-deps
        - prep-code-climate
    - admin-ui-lint:
        requires: ['admin-ui-deps']
    - admin-ui-tests:
        requires:
        - admin-ui-deps
        - prep-code-climate

    - viewer-build-demo:
        requires: ['viewer-deps']
        filters:
          branches:
            ignore: release
    - viewer-build-prod:
        requires: ['viewer-deps']
        filters:
          branches:
            only: release
    - admin-ui-build:
        requires: ['admin-ui-deps']
    - api-build:
        requires:
          - api-deps
          - admin-ui-build

    - submit_coverage:
        requires:
        - viewer-tests
        - api-tests

    - deploy-demo:
        requires:
          - viewer-lint
          - viewer-tests
          - viewer-build-demo
          - api-lint
          - api-tests
          - admin-ui-lint
          - admin-ui-tests
          - admin-ui-build
          - api-build
        filters:
          branches:
            only: node8-fix
    - deploy-prod:
        requires:
          - viewer-lint
          - viewer-tests
          - viewer-build-prod
          - api-lint
          - api-tests
          - admin-ui-lint
          - admin-ui-tests
          - admin-ui-build
          - api-build
        filters:
          branches:
            only: release

  redeploy-demo:
    <<: *ALL_WORKFLOW
    triggers:
    - schedule:
        cron: "0 17 * * *"  # Roughly noon ET
        filters:
          branches:
            only: ['master']

  redeploy-prod:
    <<: *ALL_WORKFLOW
    triggers:
    - schedule:
        cron: "0 18 * * *"  # Roughly 1pm ET
        filters:
          branches:
            only: ['release']
