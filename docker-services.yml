version: '2.1'
services:
  minio:
    image: minio/minio
    environment:
        - MINIO_ACCESS_KEY=LOCAL_ID
        - MINIO_SECRET_KEY=LOCAL_KEY
    command: server --address ':9100' minio-test
    ports:
      - 9100:9100   # minio
  api:
    image: python:3.6.2
    working_dir: /usr/src/app/api
    stdin_open: true
    tty: true
    entrypoint: .docker/activate_then .docker/wait_for_webpack_then .docker/wait_for_db_then
    command: ./run_api.sh
    environment:
      PORT: 8001
      DEBUG: ${DEBUG:-true}
      USE_POLLING: ${USE_POLLING:-false}
      DATABASE_URL: postgres://postgres@persistent_db/postgres
      DJANGO_SETTINGS_MODULE: omb_eregs.settings
      TMPDIR: /tmp
      USING_SSL: "False"

      # Uncomment one of the following lines for MAX logins
      # MAX_URL: https://login.max.gov/cas/login
      # MAX_URL: https://login.test.max.gov/cas/login

      # The following settings are to maintain environment parity between the
      # docker-compose configuration for local development and the cloud.gov
      # staging and production configurations.
      VCAP_APPLICATION: >
        {"uris": ["localhost", "0.0.0.0", "127.0.0.1", "api"]}
      VCAP_SERVICES: >
        {"config": [{"credentials": {"DJANGO_SECRET_KEY": "NotASecret"}}],
         "s3": [{
           "credentials": {
             "access_key_id": "LOCAL_ID",
             "bucket": "pdfs",
             "region": "irrelevant fake region",
             "endpoint": "http://minio:9100",
             "secret_access_key": "LOCAL_KEY"
           },
           "label": "s3",
           "name": "storage-s3"
         }]
        }
    ports:
      - 8001:8001

  api-ui:
    image: node:6
    environment:
      USE_POLLING: ${USE_POLLING:-false}
    working_dir: /usr/src/app/api
    entrypoint: .docker/deps_ok_then .docker/modify_path_then
    command: webpack --watch

  ui:
    image: node:6
    working_dir: /usr/src/app/ui
    entrypoint: .docker/deps_ok_then .docker/modify_path_then
    command: .docker/watch-run.sh
    environment:
      PORT: 8002
      NODE_ENV: ${NODE_ENV:-development}
      API_URL: ${API_URL:-http://localhost:8001/}
      INTERNAL_API_URL: ${INTERNAL_API_URL:-http://api:8001/}
      USE_POLLING: ${USE_POLLING:-false}
      VCAP_SERVICES: >
        {"config": [{"name": "config", "credentials": {"UI_BASIC_AUTH": {
        }}}]}
    ports:
      - 8002:8002

  #---- Commands ----

  # TODO: Migrate these somehow.

  psql:
    # This seems like a decent replacement:
    #
    #     docker-compose run persistent_db psql -h persistent_db -U postgres
    image: postgres:9.4
    entrypoint: 'psql -h persistent_db -U postgres'
    depends_on: ['persistent_db']

  ptw:
    # This can be replaced with:
    #
    #     docker-compose run api .docker/watch_tests.sh
    entrypoint: .docker/activate_then .docker/watch_tests.sh
    command: ''
    ports: []
