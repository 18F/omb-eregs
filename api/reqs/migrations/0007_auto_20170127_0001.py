# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-27 00:01
from __future__ import unicode_literals

import logging
from datetime import datetime

from django.db import migrations


logger = logging.getLogger(__name__)


def forward(apps, schema_editor):
    for req in apps.get_model('reqs', 'Requirement').objects.all():
        try:
            req.policy_issuance = datetime.strptime(
                req.policy_issuance_year, '%m/%d/%Y').date()

            if req.policy_subset not in ('NA', 'None specified'):
                req.policy_sunset = datetime.strptime(
                    req.policy_subset, '%m/%d/%Y').date()
        except ValueError:
            logger.warning('Invalid date. Removing requirement %s', req.req_id)
            req.delete()


def backward(apps, schema_editor):
    for req in apps.get_model('req', 'Requirement').objects.all():
        req.policy_issuance_year = req.policy_issuance.strftime('%m/%d/%Y')
        req.policy_subset = req.policy_sunset.strftime('%m/%d/%Y')


class Migration(migrations.Migration):
    dependencies = [('reqs', '0006_auto_20170127_0037')]
    operations = [migrations.RunPython(forward, backward)]
