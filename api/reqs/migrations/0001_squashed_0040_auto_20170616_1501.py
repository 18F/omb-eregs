# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-12 21:38
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [
        ('reqs', '0001_initial'),
        ('reqs', '0002_auto_20170125_1917'),
        ('reqs', '0003_auto_20170125_1917'),
        ('reqs', '0004_auto_20170125_2041'),
        ('reqs', '0005_auto_20170125_2043'),
        ('reqs', '0006_auto_20170127_0037'),
        ('reqs', '0007_auto_20170127_0001'),
        ('reqs', '0008_auto_20170127_0039'),
        ('reqs', '0009_auto_20170127_2104'),
        ('reqs', '0010_auto_20170127_1819'),
        ('reqs', '0011_auto_20170127_2213'),
        ('reqs', '0012_auto_20170131_1827'),
        ('reqs', '0013_auto_20170131_1829'),
        ('reqs', '0014_auto_20170201_0006'),
        ('reqs', '0015_auto_20170214_1529'),
        ('reqs', '0016_auto_20170214_1551'),
        ('reqs', '0017_auto_20170222_2019'),
        ('reqs', '0018_auto_20170307_1554'),
        ('reqs', '0018_auto_20170228_1727'),
        ('reqs', '0019_merge_20170307_2232'),
        ('reqs', '0020_auto_20170307_2246'),
        ('reqs', '0021_auto_20170321_2251'),
        ('reqs', '0022_auto_20170329_1719'),
        ('reqs', '0023_auto_20170418_1751'),
        ('reqs', '0024_auto_20170425_2317'),
        ('reqs', '0025_policy_document_source'),
        ('reqs', '0026_policy_nonpublic'),
        ('reqs', '0027_auto_20170511_2111'),
        ('reqs', '0028_auto_20170516_2117'),
        ('reqs', '0029_auto_20170517_2024'),
        ('reqs', '0030_auto_20170517_2035'),
        ('reqs', '0031_auto_20170601_1631'),
        ('reqs', '0032_auto_20170601_1633'),
        ('reqs', '0033_auto_20170601_1753'),
        ('reqs', '0031_auto_20170531_1242'),
        ('reqs', '0034_merge_20170605_1637'),
        ('reqs', '0031_auto_20170519_1610'),
        ('reqs', '0032_auto_20170519_1952'),
        ('reqs', '0035_merge_20170605_1903'),
        ('reqs', '0036_auto_20170606_1818'),
        ('reqs', '0037_auto_20170613_1318'),
        ('reqs', '0038_requirement_public'),
        ('reqs', '0037_auto_20170613_1811'),
        ('reqs', '0038_auto_20170613_1816'),
        ('reqs', '0039_merge_20170614_1333'),
        ('reqs', '0040_auto_20170616_1501')
    ]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('abbr', models.CharField(blank=True, max_length=64)),
                ('omb_agency_code', models.CharField(blank=True, max_length=8)),
                ('public', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Agency',
                'verbose_name_plural': 'Agencies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AgencyGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('slug', models.CharField(blank=True, max_length=64)),
                ('agencies', models.ManyToManyField(
                    blank=True, related_name='groups',to='reqs.Agency')),
            ],
            options={
                'verbose_name': 'Agency Group',
                'verbose_name_plural': 'Agency Groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('policy_number', models.IntegerField(unique=True)),
                ('title', models.CharField(max_length=1024)),
                ('uri', models.CharField(max_length=256)),
                ('omb_policy_id', models.CharField(blank=True, max_length=64)),
                ('policy_type', models.CharField(blank=True, choices=[
                    ('circular', 'Circular'), ('executive', 'Executive Order'), 
                    ('guidance', 'Guidance'), ('hspd', 'HSPD'), ('law', 'Law'), 
                    ('memorandum', 'Memorandum'),
                    ('national_action', 'National Action Plan'),
                    ('plan', 'Plan'), ('ppd', 'PPD'),
                    ('review', 'Policy Review'),
                    ('standards', 'Standards'),
                    ('strategy', 'Strategy')], max_length=32)),
                ('issuance', models.DateField()),
                ('sunset', models.DateField(blank=True, null=True)),
                ('policy_status', models.CharField(blank=True, max_length=256)),
                ('document_source', models.FileField(blank=True, upload_to='')),
                ('public', models.BooleanField(default=True)),
                ('issuing_body', models.CharField(max_length=512)),
                ('managing_office', models.ForeignKey(
                    blank=True, null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    to='reqs.Office')),
            ],
            options={
                'verbose_name_plural': 'Policies',
                'ordering': ['policy_number'],
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('req_id', models.CharField(max_length=16, unique=True)),
                ('policy_section', models.CharField(blank=True, max_length=1024)),
                ('policy_sub_section', models.CharField(blank=True,
                                                        max_length=1024)),
                ('req_text', models.TextField()),
                ('verb', models.CharField(blank=True, max_length=1024)),
                ('impacted_entity', models.CharField(blank=True,
                                                     max_length=8192)),
                ('req_deadline', models.CharField(blank=True, max_length=512)),
                ('citation', models.CharField(blank=True, max_length=1024)),
                ('req_status', models.CharField(blank=True, max_length=32)),
                ('precedent', models.CharField(blank=True, max_length=1024)),
                ('related_reqs', models.CharField(blank=True, max_length=1024)),
                ('omb_data_collection', models.CharField(blank=True,
                                                         max_length=1024)),
                ('public', models.BooleanField(default=True)),
                ('agencies', models.ManyToManyField(blank=True,
                                                    to='reqs.Agency')),
                ('agency_groups', models.ManyToManyField(
                    blank=True, to='reqs.AgencyGroup')),
                ('policy', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='requirements', to='reqs.Policy')),
            ],
            options={
                'ordering': ['req_id'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True,
                                        serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='requirement',
            name='topics',
            field=models.ManyToManyField(
                blank=True, related_name='requirements', to='reqs.Topic'),
        ),

        # "All agencies" view/field
        migrations.RunSQL("""
            CREATE VIEW reqs_requirement_all_agencies AS (
                --- Direct connection
                (SELECT
                    -- prefix with letters to avoid conflicts
                    'a' || id AS id, requirement_id, agency_id
                    FROM reqs_requirement_agencies
                )
                UNION
                --- Through agency groups
                (SELECT 
                    -- prefix with letters to avoid conflicts
                    'g' || rrag.id || 'a' || rag.id, requirement_id, agency_id
                    FROM reqs_requirement_agency_groups rrag
                    INNER JOIN reqs_agencygroup_agencies rag
                        ON rrag.agencygroup_id = rag.agencygroup_id
                )
            )
            """,
            "DROP VIEW reqs_requirement_all_agencies"
        ),
        migrations.CreateModel(
            name='RequirementAllAgencies',
            fields=[
                ('id', models.CharField(max_length=1024, primary_key=True,
                                        serialize=False)),
            ],
            options={
                'db_table': 'reqs_requirement_all_agencies',
                'managed': False,
            },
        ),
        migrations.AddField(
            model_name='requirement',
            name='all_agencies',
            field=models.ManyToManyField(
                related_name='all_requirements',
                through='reqs.RequirementAllAgencies', to='reqs.Agency'),
        ),

        # GIN index
        migrations.RunSQL("""
            CREATE INDEX reqs_requirement_gin_search
                ON reqs_requirement
                USING GIN (to_tsvector('english', req_text))
            """,
            "DROP INDEX reqs_requirement_gin_search"
        ),
    ]
