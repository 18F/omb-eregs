version: '2'
services:
  persistent_db:
    image: postgres:9.4
    volumes:
      - database_data:/var/lib/postgresql/data
  selenium_chrome:
    image: selenium/standalone-chrome:3
    depends_on:
      - prod
      - prod-api
  selenium_firefox:
    image: selenium/standalone-firefox:3
    depends_on:
      - prod
      - prod-api
  python: &PYTHON     # This command is out of order to aid with config reuse
    image: python:3.5.3
    volumes:
      - $PWD:/usr/src/app
    working_dir: /usr/src/app
    stdin_open: true
    tty: true
  minio:
    image: minio/minio
    environment:
        - MINIO_ACCESS_KEY=LOCAL_ID
        - MINIO_SECRET_KEY=LOCAL_KEY
    command: server --address ':9100' minio-test
    ports:
        - 9100:9100
        # port forward the prod-api and dev-api ports
        - 8001:8001
        - 9001:9001
    # similarly, even though minio doesn't access these links, we want py.test
    # to have them
    external_links:
      - selenium_chrome
      - selenium_firefox
  prod-api: &PROD_API
    <<: *PYTHON
    command: ./devops/wait_for_db_then ./devops/activate_then ./devops/run_api.sh
    environment: &API_ENV
      DATABASE_URL: postgres://postgres@persistent_db/postgres
      PORT: 9001
      DJANGO_SETTINGS_MODULE: omb_eregs.settings
      TMPDIR: /tmp
      # Uncomment the following line for MAX logins
      # MAX_URL: https://login.max.gov/cas/login
      # The following settings are to maintain environment parity between the
      # docker-compose configuration for local development and the cloud.gov
      # staging and production configurations.
      VCAP_APPLICATION: >
        {"uris": ["localhost", "0.0.0.0", "127.0.0.1", "prod-api", "dev-api"]}
      VCAP_SERVICES: >
        {"config": [{"credentials":
          {"DJANGO_SECRET_KEY": "NotASecret", "USING_SSL": "False"}
        }],
          "s3": [{"credentials":
          {"access_key_id": "LOCAL_ID", "bucket": "pdfs", "secret_access_key": "LOCAL_KEY", "region": "irrelevant fake region", "endpoint": "http://localhost:9100"},
          "label": "s3",
          "name": "storage-s3"
        }]
        }
    depends_on:
      - persistent_db
      # minio's not needed due to the network_mode below
    # We want to use `localhost` when referring to our minio endpoint, so put
    # ourselves on minio's network
    network_mode: service:minio

  dev-api: &DEV_API
    <<: *PROD_API
    command: ./devops/wait_for_db_then ./devops/activate_then ./devops/run_api.sh
    environment: &DEV_API_ENV
      <<: *API_ENV
      PORT: 8001
      DEBUG: "true"
      # Uncomment the following line for MAX logins
      # MAX_URL: https://login.test.max.gov/cas/login

  prod: &PROD_UI
    image: node:6
    volumes:
      - $PWD:/usr/src/app
    working_dir: /usr/src/app
    command: ./devops/deps_ok_then npm start
    ports:
      - 9000:9000
    environment: &UI_ENV
      PORT: 9000
      NODE_ENV: production
      INTERNAL_API: 'http://prod-api:9001/'
      PUBLIC_API: 'http://0.0.0.0:9001/'
      VCAP_SERVICES: >
        {"config": [{"name": "config", "credentials": {"UI_BASIC_AUTH": {
        }}}]}
    depends_on:
      - prod-api

  dev: &DEV_UI
    <<: *PROD_UI
    command: ./devops/deps_ok_then ./devops/dev_ui.sh
    ports:
      - 8000:8000
    environment:
      <<: *UI_ENV
      PORT: 8000
      NODE_ENV: ''
      INTERNAL_API: 'http://dev-api:8001/'
      PUBLIC_API: 'http://0.0.0.0:8001/'
      VCAP_SERVICES: >
        {"config": [{"name": "config", "credentials": {"UI_BASIC_AUTH": {
        }}}]}
    depends_on:
      - dev-api


  #---- Commands ----
  flake8:
    <<: *PYTHON
    environment:
      DEBUG: "true"
    entrypoint: ./devops/activate_then flake8

  pip-compile:
    <<: *PYTHON
    environment:
      DEBUG: "true"
    entrypoint: ./devops/activate_then pip-compile

  bandit:
    <<: *PYTHON
    environment:
      DEBUG: "true"
    entrypoint: ./devops/activate_then bandit


  manage.py:
    <<: *DEV_API
    entrypoint: ./devops/wait_for_db_then ./devops/activate_then ./manage.py
    command: ''

  py.test:
    <<: *DEV_API
    entrypoint: ./devops/wait_for_db_then ./devops/activate_then py.test
    command: ''

  npm:
    <<: *DEV_UI
    entrypoint: ./devops/deps_ok_then npm
    command: ''
    ports: []
    depends_on: []

  webpack:
    <<: *DEV_UI
    entrypoint: ./devops/deps_ok_then ./node_modules/.bin/webpack
    command: ''
    ports: []
    depends_on: []

  psql:
    image: postgres:9.4
    entrypoint: 'psql -h persistent_db -U postgres'
    depends_on: ['persistent_db']

volumes:
  database_data:
